{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["useStyles","makeStyles","theme","root","width","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","card","maxHeight","cardMedia","height","IndexPage","_React$useState","React","useState","_React$useState2","react_default","a","createElement","layout","seo","title","Grid","container","justify","item","xs","Divider","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","display","appBar","color","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","flexGrow","contentShift","Header","_clsx","siteTitle","classes","useTheme","open","setOpen","className","CssBaseline","AppBar","position","elevation","clsx","Toolbar","IconButton","aria-label","onClick","edge","Menu_default","Typography","variant","Drawer","anchor","direction","ChevronLeft_default","ChevronRight_default","List","gatsby_browser_entry","to","ListItem","button","ListItemIcon","Home_default","ListItemText","ViewList_default","Layout","style","minHeight","header","margin","maxWidth","paddingTop","Date","getFullYear","href","_2994927498","node"],"mappings":"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","file":"component---src-pages-index-js-384a3c1a9e6b91c8c3f8.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout'\nimport Image from '../components/image'\nimport SEO from '../components/seo'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport Divider from '@material-ui/core/Divider'\nimport ListSubheader from '@material-ui/core/ListSubheader'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Collapse from '@material-ui/core/Collapse'\n\nimport StarIcon from '@material-ui/icons/Star'\nimport InfoIcon from '@material-ui/icons/Info'\nimport ExpandLess from '@material-ui/icons/ExpandLess'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\nimport Done from '@material-ui/icons/Done'\n\nimport Card from '@material-ui/core/Card';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  card: {\n    maxHeight: 250,\n  },\n  cardMedia: {\n    height: 140, \n  },\n}));\n\nconst IndexPage = () => {\n\n  const classes = useStyles()\n  const [features, setFeatures] = React.useState(true)\n  const [info, setInfo] = React.useState(true)\n\n  function handleClick(id) {\n    switch(id) {\n      case \"features\":\n        setFeatures(!features)\n        break;\n      case \"info\":\n        setInfo(!info)\n        break\n    }\n  }\n\n  return(\n    <Layout>\n      <SEO title=\"Home\" />\n      <Grid container spacing={3} justify=\"center\">\n        <Grid item xs={8}>\n          <h1>Josh's Personal Site</h1>\n          <h5>\n            First commit!\n          </h5>\n        </Grid>\n      </Grid>\n      <Divider />\n    </Layout>\n  )\n}\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `viewport`,\n          content: `minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no`,\n        },\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import PropTypes from 'prop-types'\nimport React from 'react'\n\nimport { Link } from 'gatsby'\n\nimport clsx from 'clsx'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport List from '@material-ui/core/List'\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport HomeIcon from '@material-ui/icons/Home'\nimport ListIcon from '@material-ui/icons/ViewList'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    color: '#000000',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    background: 'rgba(0,0,0,0)',\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}))\n\nconst Header = ({ siteTitle }) => {\n  const classes = useStyles()\n\n  const theme = useTheme()\n  const [open, setOpen] = React.useState(false)\n\n  function handleDrawerOpen() {\n    setOpen(true)\n  }\n\n  function handleDrawerClose() {\n    setOpen(false)\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        elevation={0}\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"Open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\">\n            {siteTitle}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <Link to=\"/\">\n            <ListItem button>\n              <ListItemIcon>\n                <HomeIcon />\n              </ListItemIcon>\n              <ListItemText>Home</ListItemText>\n            </ListItem>\n          </Link>\n          <Link to=\"/components\">\n            <ListItem button>\n              <ListItemIcon>\n                <ListIcon />\n              </ListItemIcon>\n              <ListItemText>Blog</ListItemText>\n            </ListItem>\n          </Link>\n        </List>\n      </Drawer>\n    </div>\n  )\n}\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={data => (\n        <div style={{ minHeight: '100vh', background: '#FFFFFF' }}>\n          <Header siteTitle={data.site.siteMetadata.title} />\n          <div\n            style={{\n              margin: `0 auto`,\n              maxWidth: 960,\n              padding: `0px 1.0875rem 1.45rem`,\n              paddingTop: 100,\n            }}\n          >\n            <main>{children}</main>\n            <footer style={{ paddingTop: 10 }}>\n              © {new Date().getFullYear()}, Built with\n              {` `}\n              <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n            </footer>\n          </div>\n        </div>\n      )}\n    />\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}